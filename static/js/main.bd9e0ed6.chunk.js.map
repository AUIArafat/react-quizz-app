{"version":3,"sources":["utils/storageData.js","mock-data/data.js","contexts/Context.js","components/Navbar/index.jsx","components/Layout/index.jsx","pages/Home/index.jsx","pages/Signin/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["storageData","user","sessionStorage","setItem","JSON","stringify","getItem","parse","users","id","uuidv4","email","password","name","verifyUser","Promise","resolve","reject","find","console","log","setTimeout","Error","UserContext","createContext","currentUser","authenticateUser","loading","UserProvider","children","useState","setLoading","setCurrentUser","a","then","catch","error","useEffect","value","Provider","Navbar","useContext","className","to","Content","AntLayout","Layout","spinning","Home","type","shape","size","SingInForm","history","useHistory","push","onFinish","values","initialValues","remember","Item","rules","required","message","prefix","UserOutlined","placeholder","autoComplete","LockOutlined","htmlType","App","exact","path","component","Signin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd9e0ed6.chunk.js","sourcesContent":["export const storageData = {\n  setLoggedInUser(user) {\n    if (user) sessionStorage.setItem(\"login_user\", JSON.stringify(user));\n  },\n  getLoggedInUser() {\n    const user = sessionStorage.getItem(\"login_user\");\n    if (user) {\n      return JSON.parse(user);\n    }\n    return null;\n  },\n  logout() {\n    sessionStorage.removeItem(\"login_user\");\n  },\n  setValue(key, value) {\n    return localStorage.setItem(key, value);\n  },\n  getValue(key) {\n    return localStorage.getItem(key);\n  },\n};\n","import { v4 as uuidv4 } from \"uuid\";\n\nlet users = [\n  {\n    id: uuidv4(),\n    email: \"admin@quiz-app.com\",\n    password: \"12345\",\n    name: \"Admin\",\n  },\n  {\n    id: uuidv4(),\n    email: \"admin@quiz-app.com\",\n    password: \"admin\",\n    name: \"Admin\",\n  },\n  {\n    id: uuidv4(),\n    email: \"user1@quiz-app.com\",\n    password: \"12345\",\n    name: \"Mark\",\n  },\n  {\n    id: uuidv4(),\n    email: \"user2@quiz-app.com\",\n    password: \"12345\",\n    name: \"Henry\",\n  },\n];\n\nexport const verifyUser = (email, password) => {\n  return new Promise((resolve, reject) => {\n    const user = users.find(\n      (user) => user.email === email && user.password === password\n    );\n    console.log(user);\n    if (user) {\n      setTimeout(() => resolve(user), 500);\n    }\n    setTimeout(() => reject(new Error(\"User not found\")), 500);\n  });\n};\n","import { createContext, useEffect, useState } from \"react\";\nimport { storageData } from \"../utils/storageData\";\nimport { verifyUser } from \"../mock-data/data\";\n\nexport const UserContext = createContext({\n  currentUser: null,\n  authenticateUser: () => {},\n  loading: false,\n});\n\nexport function UserProvider({ children }) {\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const user = storageData.getLoggedInUser();\n    if (user) setCurrentUser(user);\n  }, []);\n  async function authenticateUser(email, password) {\n    setLoading(true);\n    await verifyUser(email, password)\n      .then((user) => {\n        setCurrentUser(user);\n        storageData.setLoggedInUser(user);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n      });\n  }\n  const value = {\n    currentUser,\n    authenticateUser,\n    loading,\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n}\n","import { Header } from \"antd/lib/layout/layout\";\nimport LoginOutlined from \"@ant-design/icons/LoginOutlined\";\nimport LogoutOutlined from \"@ant-design/icons/LogoutOutlined\";\nimport { Link } from \"react-router-dom\";\nimport \"./style/index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../contexts/Context\";\n\nexport default function Navbar() {\n  const { currentUser } = useContext(UserContext);\n  return (\n    <Header className={\"header\"}>\n      <div className=\"logo\">\n        <Link to=\"/\">React Quiz App</Link>\n      </div>\n      <div className={\"header-right-side\"}>\n        {currentUser ? (\n          <>\n            <span>{currentUser.name}, Signed in</span>{\" \"}\n            <Link to=\"/signin\">\n              <LogoutOutlined /> Sign Out\n            </Link>\n          </>\n        ) : (\n          <Link to=\"/signin\">\n            <LoginOutlined /> Sign In\n          </Link>\n        )}\n      </div>\n    </Header>\n  );\n}\n","import { Layout as AntLayout, Spin } from \"antd\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../contexts/Context\";\nimport Navbar from \"../Navbar\";\nimport \"./style/index.css\";\nconst { Content } = AntLayout;\n\nexport default function Layout({ children }) {\n  const { loading } = useContext(UserContext);\n  return (\n    <Spin spinning={loading}>\n      <AntLayout>\n        <Navbar />\n        <Content>{children}</Content>\n      </AntLayout>\n    </Spin>\n  );\n}\n","import { Button } from \"antd\";\n\nimport \"./style/index.css\";\n\nexport default function Home() {\n  return (\n    <div className={\"text-box\"}>\n      <h1 className={\"primary-heading\"}>\n        <span>Welcome to the</span>\n        <span>React Quiz App</span>\n      </h1>\n      <Button type=\"default\" shape=\"round\" size=\"large\">\n        Start Quizz\n      </Button>\n    </div>\n  );\n}\n","import { Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined, LoginOutlined } from \"@ant-design/icons\";\n\nimport \"./style/index.css\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../contexts/Context\";\nimport { useHistory } from \"react-router\";\n\nexport default function SingInForm() {\n  const { authenticateUser, currentUser } = useContext(UserContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (currentUser) history.push(\"/\");\n  }, [currentUser]);\n\n  const onFinish = async (values) => {\n    console.log(\"Received values of form: \", values);\n    await authenticateUser(values.email, values.password);\n  };\n\n  return (\n    <Form\n      name=\"normal_signin\"\n      className=\"signin-form\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={onFinish}\n    >\n      <Form.Item className={\"signin-header\"}>\n        <h1>Sign in to Continue</h1>\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Email\"\n          autoComplete={\"new-password\"}\n          type=\"email\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Password!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n          autoComplete={\"new-password\"}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"signin-form-button\">\n          <LoginOutlined /> Sign in\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport { UserProvider } from \"./contexts/Context\";\nimport Home from \"./pages/Home\";\nimport Signin from \"./pages/Signin\";\n\nfunction App() {\n  return (\n    <Router>\n      <UserProvider>\n        <Layout>\n          <Switch>\n            <Route exact path={\"/\"} component={Home} />\n            <Route exact path={\"/signin\"} component={Signin} />\n          </Switch>\n        </Layout>\n      </UserProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './global.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}