{"version":3,"sources":["utils/storageData.js","mock-data/api.js","contexts/Context.js","components/Navbar/index.jsx","components/Layout/index.jsx","components/PrivateRoute/index.jsx","components/SubHeader/index.jsx","pages/AnswersPage/components/Answer.jsx","pages/AnswersPage/components/Question.jsx","pages/AnswersPage/hooks/useAnswers.js","pages/AnswersPage/index.jsx","pages/HomePage/index.jsx","pages/NotFound/index.jsx","pages/QuestionsPage/components/Question.jsx","pages/QuestionsPage/components/AddQuestion.jsx","pages/QuestionsPage/hooks/useQuestions.js","pages/QuestionsPage/index.jsx","pages/QuizPage/hooks/useQuiz.js","pages/QuizPage/components/AnswerSection.jsx","pages/QuizPage/components/PreviousAnswer.jsx","pages/QuizPage/index.jsx","pages/Signin/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["storageData","user","sessionStorage","setItem","JSON","stringify","getItem","parse","removeItem","key","value","localStorage","users","id","uuidv4","email","password","name","userType","questions","question","answers","verifyUser","Promise","resolve","reject","find","setTimeout","Error","getAllQuestions","undefined","createQuestion","data","allQuestions","newQuestion","updateQuestions","questionIdx","findIndex","deleteQuestions","filteredQuestions","filter","item","getAllAnswers","getAnswersByUserId","answer","createAnswer","userId","ans","ques","previousAnswer","push","newQuestionAnswer","UserContext","createContext","currentUser","authenticateUser","logout","loading","error","UserProvider","children","useState","setLoading","setCurrentUser","setError","a","then","catch","toString","useEffect","Provider","Navbar","useContext","history","useHistory","className","to","onClick","type","ArrowRightOutlined","QuestionCircleOutlined","Content","AntLayout","Layout","notification","message","spinning","PrivateRoute","Component","component","rest","render","props","SubHeader","title","Answer","Question","useAnswers","setAnswers","res","fetchAllAnswers","Panel","Collapse","AnswersPage","autoComplete","defaultActiveKey","expandIcon","UserOutlined","Object","keys","map","index","header","idx","expandIconPosition","isActive","MinusOutlined","PlusOutlined","HomePage","shape","size","NotFound","Paragraph","Typography","onChange","handleDelete","editable","e","icon","EditOutlined","DeleteOutlined","AddQuestion","form","handleAddQuestion","layout","onFinish","Item","style","width","TextArea","placeholder","htmlType","useQuestions","setQuestions","fetchAllQuestions","addQuestion","removeQuestion","editQuestions","QuestionsPage","Form","useForm","val","length","resetFields","useQuiz","fetchAnswers","submitAnswer","AnswerSection","handleSubmitAnswer","PreviousAnswer","prevAns","bordered","dataSource","renderItem","marginTop","QuizPage","editAnswer","getFieldValue","submitData","accordion","slice","SingInForm","initialValues","remember","values","rules","required","prefix","LockOutlined","App","exact","path","Signin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"8dAAaA,EAAc,SACTC,GACVA,GAAMC,eAAeC,QAAQ,aAAcC,KAAKC,UAAUJ,KAFrDD,EAAc,WAKvB,IAAMC,EAAOC,eAAeI,QAAQ,cACpC,OAAIL,EACKG,KAAKG,MAAMN,GAEb,MATED,EAAc,WAYvBE,eAAeM,WAAW,eAZjBR,EAAc,SAchBS,EAAKC,GACZ,OAAOC,aAAaR,QAAQM,EAAKL,KAAKC,UAAUK,KAfvCV,EAAc,SAiBhBS,GACP,IAAMC,EAAQC,aAAaL,QAAQG,GACnC,OAAIC,EAAcN,KAAKG,MAAMG,GACtB,M,iCClBPE,EAAQ,CACV,CACEC,GAAIC,eACJC,MAAO,qBACPC,SAAU,QACVC,KAAM,QACNC,SAAU,SAEZ,CACEL,GAAIC,eACJC,MAAO,qBACPC,SAAU,QACVC,KAAM,OACNC,SAAU,QAEZ,CACEL,GAAIC,eACJC,MAAO,qBACPC,SAAU,QACVC,KAAM,QACNC,SAAU,QAEZ,CACEL,GAAIC,eACJC,MAAO,qBACPC,SAAU,QACVC,KAAM,MACNC,SAAU,SAIVC,EAAY,CACd,CACEN,GAAIC,eACJM,SAAU,2CAEZ,CACEP,GAAIC,eACJM,SACE,qEAEJ,CACEP,GAAIC,eACJM,SACE,iFAEJ,CACEP,GAAIC,eACJM,SACE,6EAIFC,EAAU,GAEDC,EAAa,SAACP,EAAOC,GAChC,OAAO,IAAIO,SAAQ,SAACC,EAASC,GAC3B,IAAMxB,EAAOW,EAAMc,MACjB,SAACzB,GAAD,OAAUA,EAAKc,QAAUA,GAASd,EAAKe,WAAaA,KAElDf,GACF0B,YAAW,kBAAMH,EAAQvB,KAAO,KAElC0B,YAAW,kBAAMF,EAAO,IAAIG,MAAM,qBAAoB,SAI7CC,EAAkB,WAC7B,OAAO,IAAIN,SAAQ,SAACC,EAASC,GAExBzB,EAAqB,mBACgB8B,IAAtC9B,EAAqB,aAKrB2B,YAAW,kBAAMH,EAAQxB,EAAqB,gBAAe,MAH7DA,EAAqB,YAAamB,GAClCQ,YAAW,kBAAMH,EAAQL,KAAY,MAIvCQ,YAAW,kBAAMF,EAAO,IAAIG,MAAM,8BAA6B,SAItDG,EAAiB,SAACC,GAC7B,OAAO,IAAIT,SAAQ,SAACC,EAASC,GACtBO,EAAKZ,UACRK,EAAO,IAAIG,MAAM,kCAEnB,IAAIK,EAAejC,EAAqB,aAElCkC,EAAc,CAAErB,GADXC,eACmBM,SAAUY,EAAKZ,UAE7Ca,EAAY,sBAAOA,GAAP,CAAqBC,IAEjCP,YAAW,kBAAMH,EAAQS,KAAe,SAI/BE,EAAkB,SAACtB,EAAIO,GAAL,OAC7B,IAAIG,SAAQ,SAACC,EAASC,GACpB,IAAMQ,EAAejC,EAAqB,aACpCoC,EAAcH,EAAaI,WAC/B,SAACjB,GAAD,OAAcA,EAASP,KAAOA,KAEhC,OAAKO,GAILa,EAAaG,GAAahB,SAAWA,EACrCpB,EAAqB,YAAaiC,GAC3BN,YAAW,kBAAMH,EAAQS,KAAe,MALtCN,YAAW,kBAAMF,EAAO,IAAIG,MAAM,yBAAwB,SAQ1DU,EAAkB,SAACzB,GAC9B,OAAO,IAAIU,SAAQ,SAACC,EAASC,GAC3B,IACMc,EADevC,EAAqB,aACHwC,QAAO,SAACC,GAAD,OAAUA,EAAK5B,KAAOA,KACpEc,YAAW,kBAAMH,EAAQe,KAAoB,KAC7CZ,YAAW,kBAAMF,EAAO,IAAIG,MAAM,qBAAoB,SAI7Cc,EAAgB,WAC3B,OAAO,IAAInB,SAAQ,SAACC,EAASC,GAExBzB,EAAqB,iBACc8B,IAApC9B,EAAqB,WAKrB2B,YAAW,kBAAMH,EAAQxB,EAAqB,cAAa,MAH3DA,EAAqB,UAAWqB,GAChCM,YAAW,kBAAMH,EAAQH,KAAU,MAIrCM,YAAW,kBAAMF,EAAO,IAAIG,MAAM,8BAA6B,SAItDe,EAAqB,SAAC9B,GACjC,OAAO,IAAIU,SAAQ,SAACC,EAASC,GAC3B,IAAImB,EAAS,KACT5C,EAAqB,aACvBqB,EAAUrB,EAAqB,WAC/B4C,EAASvB,EAAQR,IAEnBc,YAAW,kBAAMH,EAAQoB,KAAS,KAClCjB,YAAW,kBAAMF,EAAO,IAAIG,MAAM,8BAA6B,SAItDiB,EAAe,SAACC,EAAQd,GACnC,OAAO,IAAIT,SAAQ,SAACC,EAASC,GACtBO,EAAKY,QACRjB,YAAW,kBAAMF,EAAO,IAAIG,MAAM,kCAAiC,KACrE,IAAMmB,EAAM1B,EAAQyB,GACpB,GAAIC,EAAK,CACP,IAAMC,EAAOD,EAAIf,EAAKnB,IACtB,GAAImC,EACFA,EAAKJ,OAASZ,EAAKY,OACnBI,EAAKC,eAAeC,KAAKlB,EAAKY,QAC9BG,EAAIf,EAAKnB,IAAMmC,EACf3B,EAAQyB,GAAQd,EAAKnB,IAAMmC,MACtB,CACL,IAAMG,EAAoB,CACxB/B,SAAUY,EAAKZ,SACfwB,OAAQZ,EAAKY,OACbK,eAAgB,CAACjB,EAAKY,SAExBvB,EAAQyB,GAAR,2BACKzB,EAAQyB,IADb,kBAEGd,EAAKnB,GAAKsC,UAIf9B,EAAO,2BACFA,GADE,kBAEJyB,EAFI,eAGFd,EAAKnB,GAAK,CACTO,SAAUY,EAAKZ,SACfwB,OAAQZ,EAAKY,OACbK,eAAgB,CAACjB,EAAKY,YAK9BjB,YAAW,kBAAMH,EAAQH,KAAU,KACnCM,YAAW,kBAAMF,EAAO,IAAIG,MAAM,8BAA6B,S,OCtLtDwB,EAAcC,wBAAc,CACvCC,YAAa,KACbC,iBAAkB,aAClBC,OAAQ,aACRC,SAAS,EACTC,MAAO,OAGF,SAASC,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SAAY,EACXC,oBAAS,GADE,mBAClCJ,EADkC,KACzBK,EADyB,OAEHD,mBAAS,MAFN,mBAElCP,EAFkC,KAErBS,EAFqB,OAGfF,mBAAS,MAHM,mBAGlCH,EAHkC,KAG3BM,EAH2B,iDASzC,WAAgCjD,EAAOC,GAAvC,SAAAiD,EAAA,6DACEH,GAAW,GADb,SAEQxC,EAAWP,EAAOC,GACrBkD,MAAK,SAACjE,GACLD,EAA4BC,GAC5B8D,EAAe9D,GACf6D,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAVrB,4CATyC,sBAKzCC,qBAAU,WACR,IAAMpE,EAAOD,IACTC,GAAM8D,EAAe9D,KACxB,IAoBH,IAAMS,EAAQ,CACZ4C,cACAC,iBA9BuC,8CA+BvCE,UACAD,OATF,WACExD,IACA+D,EAAe,OAQfL,SAGF,OAAO,cAACN,EAAYkB,SAAb,CAAsB5D,MAAOA,EAA7B,SAAqCkD,I,qFCtC/B,SAASW,IAAU,IAAD,EACCC,qBAAWpB,GAAnCE,EADuB,EACvBA,YAAaE,EADU,EACVA,OACfiB,EAAUC,cAChB,OACE,eAAC,SAAD,CAAQC,UAAW,SAAnB,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAMC,GAAG,IAAT,8BAEF,qBAAKD,UAAW,oBAAhB,SACGrB,EACC,qCACE,iCAAOA,EAAYrC,KAAnB,iBAA2C,IACjB,UAAzBqC,EAAYpC,SACX,eAAC,IAAD,CACE2D,QAAS,WACPJ,EAAQvB,KAAK,UAEf4B,KAAM,UAJR,wBAMa,cAACC,EAAA,EAAD,OAGb,qCACE,cAAC,IAAD,CACEF,QAAS,WACPJ,EAAQvB,KAAK,aAEf4B,KAAM,UAJR,qBAQA,eAAC,IAAD,CACED,QAAS,WACPJ,EAAQvB,KAAK,eAEf4B,KAAM,UAJR,UAME,cAACE,EAAA,EAAD,IANF,mBAUJ,eAAC,IAAD,CACEH,QAAS,WACPrB,IACAiB,EAAQvB,KAAK,YAEf4B,KAAM,UALR,UAOE,cAAC,IAAD,IAPF,kBAWF,cAAC,IAAD,CAAMF,GAAG,UAAT,SACE,eAAC,IAAD,CAAQE,KAAM,UAAd,UACE,cAAC,IAAD,IADF,qB,WC1DJG,EAAYC,IAAZD,QAEO,SAASE,EAAT,GAA+B,IAAbvB,EAAY,EAAZA,SAAY,EACNY,qBAAWpB,GAAxCK,EADmC,EACnCA,QAASC,EAD0B,EAC1BA,MAAOM,EADmB,EACnBA,SAUxB,OARAK,qBAAU,WACJX,IACF0B,IAAa1B,MAAM,CACjB2B,QAAS3B,IAEXM,EAAS,SAEV,CAACN,IAEF,cAAC,IAAD,CAAM4B,SAAU7B,EAAhB,SACE,eAAC,IAAD,WACE,cAACc,EAAD,IACA,cAACU,EAAD,UAAUrB,S,aCnBH,SAAS2B,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BACtE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAEP,OADqB5F,IAEZ,cAACwF,EAAD,eAAeI,IAEf,cAAC,IAAD,CAAUhB,GAAG,gB,2DCVf,SAASiB,GAAT,GAA+B,IAAVC,EAAS,EAATA,MAClC,OACE,qBAAKnB,UAAW,QAAhB,SACE,6BAAKmB,MCLI,SAASC,GAAT,GAA6B,IAAXnD,EAAU,EAAVA,OAC/B,OACE,sBAAK+B,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,cAAhB,iBAEF,+BAAO/B,OCNE,SAASoD,GAAT,GAAiC,IAAb5E,EAAY,EAAZA,SACjC,OACE,sBAAKuD,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,gBAAhB,iBAEF,+BAAOvD,OCFE,SAAS6E,KAAc,IAAD,EACLpC,oBAAS,GADJ,mBAC5BJ,EAD4B,KACnBK,EADmB,OAETD,oBAAS,GAFA,mBAE5BH,EAF4B,KAErBM,EAFqB,OAGLH,mBAAS,MAHJ,mBAG5BxC,EAH4B,KAGnB6E,EAHmB,iDAKnC,sBAAAjC,EAAA,6DACEH,GAAW,GADb,SAEQpB,IACHwB,MAAK,SAACiC,GACLnG,EAAqB,UAAWmG,GAChCD,EAAWC,GACXrC,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAVrB,4CALmC,sBAsBnC,OAJAC,qBAAU,YAlByB,mCAmBjC+B,KACC,IAEI,CACL3C,UACAC,QACArC,W,WClBIgF,GAAUC,KAAVD,MACO,SAASE,KAAe,IAC7BjD,EAAgBkB,qBAAWpB,GAA3BE,YAD4B,EAEP2C,KAArB5E,EAF4B,EAE5BA,QAASoC,EAFmB,EAEnBA,QACXgB,EAAUC,cAMhB,OAJAL,qBAAU,WACJf,GAAyC,WAAf,OAAXA,QAAW,IAAXA,OAAA,EAAAA,EAAapC,WAAsBuD,EAAQvB,KAAK,OAClE,CAACI,IAGF,eAAC,IAAD,CAAMgC,SAAU7B,EAAhB,UACE,cAACoC,GAAD,CAAWC,MAAO,YAClB,cAAC,KAAD,CACE7E,KAAK,yBACLuF,aAAa,MACb7B,UAAW,YAHb,SAKE,cAAC,KAAD,CACE8B,iBAAkB,CAAC,KACnBC,WAAY,kBAAM,cAACC,EAAA,EAAD,KAClBhC,UAAW,gBAHb,SAKGtD,GACCuF,OAAOC,KAAKxF,GAASyF,KAAI,SAACrG,EAAKsG,GAAN,OACvB,cAACV,GAAD,CAAOW,OAAQvG,EAAf,SACGmG,OAAOC,KAAKxF,EAAQZ,IAAMqG,KAAI,SAAC9E,EAAMiF,GAAP,OAC7B,cAAC,KAAD,CACEC,mBAAmB,QACnBR,WAAY,qBAAGS,SACF,cAACC,EAAA,EAAD,IAAoB,cAACC,GAAA,EAAD,KAEjC1C,UAAW,oBALb,SAOE,cAAC0B,GAAD,CACEW,OACE,cAAChB,GAAD,CAAU5E,SAAUC,EAAQZ,GAAKuB,GAAMZ,WAF3C,SAME,cAAC2E,GAAD,CAAQnD,OAAQvB,EAAQZ,GAAKuB,GAAMY,UAF9BqE,SAbYF,a,OC5BxB,SAASO,KACtB,IAAM7C,EAAUC,cACRpB,EAAgBkB,qBAAWpB,GAA3BE,YAKR,OAJAe,qBAAU,WACJf,GAAwC,UAAzBA,EAAYpC,UAC7BuD,EAAQvB,KAAK,gBACd,IAED,sBAAKyB,UAAW,WAAhB,UACE,qBAAIA,UAAW,kBAAf,UACE,kDACA,qDAEF,cAAC,IAAD,CAAMC,GAAG,QAAT,SACE,cAAC,IAAD,CAAQE,KAAK,UAAUyC,MAAM,QAAQC,KAAK,QAA1C,6B,OChBO,SAASC,KACtB,IAAMhD,EAAUC,cAIhB,OAHAL,qBAAU,WACRI,EAAQvB,KAAK,QAGb,sBAAKyB,UAAW,WAAhB,UACE,qBAAIA,UAAW,kBAAf,UACE,uCACA,gDAEF,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQE,KAAK,UAAUyC,MAAM,QAAQC,KAAK,QAA1C,0B,yCCfAE,GAAcC,KAAdD,UACO,SAAS1B,GAAT,GAAyD,IAArC4B,EAAoC,EAApCA,SAAUxG,EAA0B,EAA1BA,SAAUyG,EAAgB,EAAhBA,aACrD,OACE,sBAAKlD,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,gBAAhB,iBAEF,cAAC+C,GAAD,CACEI,SAAU,CACRF,SAAU,SAACG,GAAD,OAAOH,EAASG,EAAG3G,IAC7B4G,KACE,cAAC,IAAD,CAAQlD,KAAM,UAAd,SACE,cAACmD,GAAA,EAAD,OALR,SAUG7G,EAASA,WAEZ,cAAC,IAAD,CAAQ0D,KAAM,UAAWD,QAAS,kBAAMgD,EAAazG,EAASP,KAA9D,SACE,cAACqH,GAAA,EAAD,S,cCrBO,SAASC,GAAT,GAAmD,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,kBAC1C,OACE,eAAC,KAAD,CACEC,OAAQ,SACR3D,UAAW,oBACX4D,SAAUF,EACVD,KAAMA,EAJR,UAME,cAAC,KAAKI,KAAN,CAAWvH,KAAK,WAAWwH,MAAO,CAAEC,MAAO,OAA3C,SACE,cAAC,KAAMC,SAAP,CAAgBC,YAAY,mBAE9B,cAAC,KAAKJ,KAAN,UACE,cAAC,IAAD,CAAQ1D,KAAK,UAAU+D,SAAS,SAASlE,UAAU,oBAAnD,+BCLO,SAASmE,KAAgB,IAAD,EACPjF,oBAAS,GADF,mBAC9BJ,EAD8B,KACrBK,EADqB,OAEXD,oBAAS,GAFE,mBAE9BH,EAF8B,KAEvBM,EAFuB,OAGHH,mBAAS,IAHN,mBAG9B1C,EAH8B,KAGnB4H,EAHmB,iDAKrC,sBAAA9E,EAAA,6DACEH,GAAW,GADb,SAEQjC,IACHqC,MAAK,SAACiC,GACLnG,EAAqB,YAAamG,GAClC4C,EAAa5C,GACbrC,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAVrB,4CALqC,kEAmBrC,WAA2BpC,GAA3B,SAAAiC,EAAA,6DACEH,GAAW,GADb,SAEQ/B,EAAeC,GAClBkC,MAAK,SAACiC,GACLnG,EAAqB,YAAamG,GAClC4C,EAAa5C,GACbrC,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAVrB,4CAnBqC,kEAiCrC,WAA8BvD,GAA9B,SAAAoD,EAAA,6DACEH,GAAW,GADb,SAEQxB,EAAgBzB,GACnBqD,MAAK,SAACiC,GACLnG,EAAqB,YAAamG,GAClC4C,EAAa5C,GACbrC,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAVrB,4CAjCqC,kEA+CrC,WAA6BvD,EAAIO,GAAjC,SAAA6C,EAAA,6DACEH,GAAW,GADb,SAEQ3B,EAAgBtB,EAAIO,GACvB8C,MAAK,SAACiC,GACLnG,EAAqB,YAAamG,GAClC4C,EAAa5C,GACbrC,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAVrB,4CA/CqC,sBAiErC,OAJAC,qBAAU,YA7D2B,mCA8DnC2E,KACC,IAEI,CACLvF,UACAC,QACAvC,YACA8H,YArEmC,4CAsEnCC,eAtEmC,4CAuEnCC,cAvEmC,+CCChC,IAAMC,GAAgB,WAAO,IAAD,EAClBC,KAAKC,UAAblB,EAD0B,oBAE3B3D,EAAUC,cACRpB,EAAgBkB,qBAAWpB,GAA3BE,YAHyB,EAK/BwF,KADM3H,EAJyB,EAIzBA,UAAWsC,EAJc,EAIdA,QAASwF,EAJK,EAILA,YAAaC,EAJR,EAIQA,eAAgBC,EAJxB,EAIwBA,cAEnDvB,EAAW,SAAC2B,EAAKnI,GACjBA,EAASP,IAAM0I,EAAIC,OAAS,GAAKD,IAAQnI,EAASA,UACpD+H,EAAc/H,EAASP,GAAI0I,IAIzB1B,EAAe,SAAChH,GACpBqI,EAAerI,IASjB,OAHAwD,qBAAU,WACsB,WAAf,OAAXf,QAAW,IAAXA,OAAA,EAAAA,EAAapC,WAAsBuD,EAAQvB,KAAK,OACnD,IAED,eAAC,IAAD,CAAMoC,SAAU7B,EAAhB,UACE,cAACoC,GAAD,CAAWC,MAAO,cAClB,cAAC,KAAD,CACE7E,KAAK,yBACLuF,aAAa,MACb7B,UAAW,YAHb,SAKGxD,EAAU2F,KAAI,SAAC1F,EAAU2F,GAAX,OACb,cAAC,KAAKyB,KAAN,UACE,cAAC,GAAD,CACEzB,MAAOA,EACPa,SAAUA,EACVxG,SAAUA,EACVyG,aAAcA,KALFzG,EAASP,SAU7B,cAACsH,GAAD,CAAaC,KAAMA,EAAMC,kBA1BH,SAACrG,GACzBiH,EAAYjH,GACZoG,EAAKqB,qBCnBM,SAASC,GAAQ5G,GAAS,IAAD,EACRe,oBAAS,GADD,mBAC/BJ,EAD+B,KACtBK,EADsB,OAEZD,oBAAS,GAFG,mBAE/BH,EAF+B,KAExBM,EAFwB,OAGRH,mBAAS,MAHD,mBAG/BxC,EAH+B,KAGtB6E,EAHsB,OAIJrC,mBAAS,IAJL,mBAI/B1C,EAJ+B,KAIpB4H,EAJoB,cAMvBY,IANuB,2EAMtC,sBAAA1F,EAAA,6DACEH,GAAW,GADb,SAEQnB,EAAmBG,GACtBoB,MAAK,SAACiC,GACLD,EAAWC,GACXrC,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eATrB,4CANsC,kEAkBtC,sBAAAH,EAAA,6DACEH,GAAW,GADb,SAEQjC,IACHqC,MAAK,SAACiC,GACLnG,EAAqB,YAAamG,GAClC4C,EAAa5C,GACbrC,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAVrB,4CAlBsC,kEAoCtC,WAA4BtB,EAAQd,GAApC,SAAAiC,EAAA,6DACEH,GAAW,GADb,SAEQjB,EAAaC,EAAQd,GACxBkC,MAAK,SAACiC,GACLnG,EAAqB,UAAWmG,GAEhCwD,IACA7F,GAAW,MAEZK,OAAM,SAACT,GACNI,GAAW,GACXE,EAASN,EAAMU,eAXrB,4CApCsC,sBAmDtC,OApBAC,qBAAU,WACRsF,IAhCoC,mCAiCpCX,KACC,CAAClG,IAiBG,CACLW,UACAC,QACArC,UACAuI,aAvDoC,8CAwDpCzI,a,IC7DIuG,GAAcC,KAAdD,UAEO,SAASmC,GAAT,GAKX,IAAD,EAJDxI,EAIC,EAJDA,QACAD,EAGC,EAHDA,SACA0I,EAEC,EAFDA,mBACA1B,EACC,EADDA,KAEA,OACE,sBAAKzD,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,cAAhB,iBAEDtD,GAAWA,EAAO,OAACD,QAAD,IAACA,OAAD,EAACA,EAAUP,IAC5B,qBAAK8D,UAAU,eAAf,SACE,cAAC,GAAD,CACEmD,SAAU,CACRF,SAAU,SAAC2B,GAAD,OAASO,EAAmB1I,EAAUmI,IAChDvB,KACE,cAAC,IAAD,CAAQlD,KAAM,UAAd,SACE,cAACmD,GAAA,EAAD,OALR,mBAUG5G,EAAO,OAACD,QAAD,IAACA,OAAD,EAACA,EAAUP,WAVrB,aAUG,EAAuB+B,WAI5B,eAAC,KAAD,CAAwB0F,OAAQ,SAAUF,KAAMA,EAAhD,UACE,cAAC,KAAKI,KAAN,CAAWvH,KAAI,iBAAYG,EAASP,IAApC,SACE,cAAC,KAAM8H,SAAP,MAEF,cAAC,KAAKH,KAAN,UACE,cAAC,IAAD,CAAQ1D,KAAK,UAAUD,QAAS,kBAAMiF,EAAmB1I,IAAzD,wBALOA,EAASP,O,cC9Bb,SAASkJ,GAAT,GAAsC,IAAZC,EAAW,EAAXA,QACvC,OACE,cAAC,KAAD,CACEhD,OAAQ,kDACRiD,UAAQ,EACRC,WAAYF,EACZG,WAAY,SAAC1H,GAAD,OAAU,cAAC,KAAK+F,KAAN,UAAY/F,KAClCgG,MAAO,CAAE2B,UAAW,U,WCElB/D,GAAUC,KAAVD,MAEO,SAASgE,KACtB,IAAM5F,EAAUC,cACRpB,EAAgBkB,qBAAWpB,GAA3BE,YAFyB,EAG4BoG,GAAO,OAClEpG,QADkE,IAClEA,OADkE,EAClEA,EAAavC,OADP0C,EAHyB,EAGzBA,QAASC,EAHgB,EAGhBA,MAAOrC,EAHS,EAGTA,QAASuI,EAHA,EAGAA,aAAczI,EAHd,EAGcA,UAHd,EAMlBkI,KAAKC,UAAblB,EAN0B,oBAQjC/D,qBAAU,WACsB,WAAf,OAAXf,QAAW,IAAXA,OAAA,EAAAA,EAAapC,WAAsBuD,EAAQvB,KAAK,gBACnD,CAACI,IAEJe,qBAAU,WACJX,GACF0B,IAAa1B,MAAM,CACjB2B,QAAS3B,MAGZ,CAACA,IAEJ,IAAMoG,EAAqB,SAAC9H,GAA6B,IAAvBsI,EAAsB,uDAAT,KACzCvH,EAAMuH,EACLA,IAAYvH,EAAMqF,EAAKmC,cAAL,iBAA6BvI,EAAKnB,MACzD,IAAM2J,EAAU,2BACXxI,GADW,IAEdY,OAAQG,IAEV6G,EAAY,OAACtG,QAAD,IAACA,OAAD,EAACA,EAAavC,MAAOyJ,IAEnC,OACE,eAAC,IAAD,CAAMlF,SAAU7B,EAAhB,UACE,cAACoC,GAAD,CAAWC,MAAO,SAClB,qBAAKnB,UAAW,YAAhB,SACE,cAAC,KAAD,CACE8F,WAAS,EACTvD,mBAAmB,QACnBR,WAAY,qBAAGS,SACF,cAACC,EAAA,EAAD,IAAoB,cAACC,GAAA,EAAD,KAJnC,SAOGlG,GACCA,EAAU2F,KAAI,SAAC1F,EAAU2F,GAAW,IAAD,IACjC,OACE,eAAC,GAAD,CACEC,OACE,sBAAKrC,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,gBAAhB,iBAEDvD,EAASA,YANhB,UAWE,cAACyI,GAAD,CACExI,QAASA,EACTD,SAAUA,EACV0I,mBAAoBA,EACpB1B,KAAMA,IAEP/G,IACD,UAAAA,EAAO,OAACD,QAAD,IAACA,OAAD,EAACA,EAAUP,WAAlB,eAAuBoC,eAAeuG,QAAS,EAC7C,cAACO,GAAD,CACEC,QAAO,UAAE3I,EAAO,OAACD,QAAD,IAACA,OAAD,EAACA,EAAUP,WAApB,aAAE,EAAuBoC,eAAeyH,MAC7C,GACC,KAGH,OAhBCtJ,EAASP,c,+BCzDjB,SAAS8J,KAAc,IAAD,EACOnG,qBAAWpB,GAA7CG,EAD2B,EAC3BA,iBAAkBD,EADS,EACTA,YACpBmB,EAAUC,cAFmB,EAGpB2E,KAAKC,UAAblB,EAH4B,oBAKnC/D,qBAAU,WACJf,GAAamB,EAAQvB,KAAK,OAC7B,CAACI,IAOJ,OACE,eAAC,KAAD,CACErC,KAAK,gBACL0D,UAAU,cACViG,cAAe,CACbC,UAAU,GAEZtC,SAZiB,SAACuC,GACpBvH,EAAiBuH,EAAO/J,MAAO+J,EAAO9J,UACtCoH,EAAKqB,eAWHrB,KAAMA,EAPR,UASE,cAAC,KAAKI,KAAN,CAAW7D,UAAW,aAAtB,SACE,uDAEF,cAAC,KAAK6D,KAAN,CACEvH,KAAK,QACL8J,MAAO,CACL,CACEC,UAAU,EACV3F,QAAS,6BALf,SASE,cAAC,KAAD,CACE4F,OAAQ,cAACtE,EAAA,EAAD,CAAchC,UAAU,wBAChCiE,YAAY,QACZpC,aAAc,eACd1B,KAAK,YAGT,cAAC,KAAK0D,KAAN,CACEvH,KAAK,WACL8J,MAAO,CACL,CACEC,UAAU,EACV3F,QAAS,gCALf,SASE,cAAC,KAAD,CACE4F,OAAQ,cAACC,GAAA,EAAD,CAAcvG,UAAU,wBAChCG,KAAK,WACL8D,YAAY,WACZpC,aAAc,mBAIlB,cAAC,KAAKgC,KAAN,UACE,eAAC,IAAD,CAAQ1D,KAAK,UAAU+D,SAAS,SAASlE,UAAU,qBAAnD,UACE,cAAC,KAAD,IADF,mBCvCOwG,OAnBf,WACE,OACE,cAAC,IAAD,UACE,cAACxH,EAAD,UACE,cAACwB,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiG,OAAK,EAACC,KAAM,UAAW5F,UAAW6F,KACzC,cAAC/F,EAAD,CAAc6F,OAAK,EAACC,KAAM,IAAK5F,UAAW6B,KAC1C,cAAC/B,EAAD,CAAc6F,OAAK,EAACC,KAAM,aAAc5F,UAAW2D,KACnD,cAAC7D,EAAD,CAAc6F,OAAK,EAACC,KAAM,WAAY5F,UAAWc,KACjD,cAAChB,EAAD,CAAc6F,OAAK,EAACC,KAAM,QAAS5F,UAAW4E,KAC9C,cAAC,IAAD,CAAO5E,UAAWgC,eCVf8D,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvH,MAAK,YAAkD,IAA/CwH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASpG,OACP,cAAC,IAAMqG,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,O","file":"static/js/main.45f6f54f.chunk.js","sourcesContent":["export const storageData = {\n  setLoggedInUser(user) {\n    if (user) sessionStorage.setItem(\"login_user\", JSON.stringify(user));\n  },\n  getLoggedInUser() {\n    const user = sessionStorage.getItem(\"login_user\");\n    if (user) {\n      return JSON.parse(user);\n    }\n    return null;\n  },\n  logout() {\n    sessionStorage.removeItem(\"login_user\");\n  },\n  setValue(key, value) {\n    return localStorage.setItem(key, JSON.stringify(value));\n  },\n  getValue(key) {\n    const value = localStorage.getItem(key);\n    if (value) return JSON.parse(value);\n    return null;\n  },\n};\n","import { v4 as uuidv4 } from \"uuid\";\nimport { storageData } from \"../utils/storageData\";\nlet users = [\n  {\n    id: uuidv4(),\n    email: \"admin@quiz-app.com\",\n    password: \"admin\",\n    name: \"Admin\",\n    userType: \"Admin\",\n  },\n  {\n    id: uuidv4(),\n    email: \"user1@quiz-app.com\",\n    password: \"12345\",\n    name: \"Mark\",\n    userType: \"User\",\n  },\n  {\n    id: uuidv4(),\n    email: \"user2@quiz-app.com\",\n    password: \"12345\",\n    name: \"Henry\",\n    userType: \"User\",\n  },\n  {\n    id: uuidv4(),\n    email: \"user3@quiz-app.com\",\n    password: \"12345\",\n    name: \"Bob\",\n    userType: \"User\",\n  },\n];\n\nlet questions = [\n  {\n    id: uuidv4(),\n    question: \"What are the advantages of using React?\",\n  },\n  {\n    id: uuidv4(),\n    question:\n      \"What are the differences between functional and class components?\",\n  },\n  {\n    id: uuidv4(),\n    question:\n      \"What is the virtual DOM? How does react use the virtual DOM to render the UI?\",\n  },\n  {\n    id: uuidv4(),\n    question:\n      \"What are the differences between controlled and uncontrolled components?\",\n  },\n];\n\nlet answers = {};\n\nexport const verifyUser = (email, password) => {\n  return new Promise((resolve, reject) => {\n    const user = users.find(\n      (user) => user.email === email && user.password === password\n    );\n    if (user) {\n      setTimeout(() => resolve(user), 500);\n    }\n    setTimeout(() => reject(new Error(\"User not found\")), 500);\n  });\n};\n\nexport const getAllQuestions = () => {\n  return new Promise((resolve, reject) => {\n    if (\n      !storageData.getValue(\"questions\") ||\n      storageData.getValue(\"questions\") === undefined\n    ) {\n      storageData.setValue(\"questions\", questions);\n      setTimeout(() => resolve(questions), 500);\n    } else {\n      setTimeout(() => resolve(storageData.getValue(\"questions\")), 500);\n    }\n    setTimeout(() => reject(new Error(\"Something went wrong!!!\")), 500);\n  });\n};\n\nexport const createQuestion = (data) => {\n  return new Promise((resolve, reject) => {\n    if (!data.question) {\n      reject(new Error(\"Not empty question allowed!!!\"));\n    }\n    let allQuestions = storageData.getValue(\"questions\");\n    const id = uuidv4();\n    const newQuestion = { id: id, question: data.question };\n\n    allQuestions = [...allQuestions, newQuestion];\n\n    setTimeout(() => resolve(allQuestions), 500);\n  });\n};\n\nexport const updateQuestions = (id, question) =>\n  new Promise((resolve, reject) => {\n    const allQuestions = storageData.getValue(\"questions\");\n    const questionIdx = allQuestions.findIndex(\n      (question) => question.id === id\n    );\n    if (!question) {\n      return setTimeout(() => reject(new Error(\"Question not found\")), 250);\n    }\n\n    allQuestions[questionIdx].question = question;\n    storageData.setValue(\"questions\", allQuestions);\n    return setTimeout(() => resolve(allQuestions), 250);\n  });\n\nexport const deleteQuestions = (id) => {\n  return new Promise((resolve, reject) => {\n    const allQuestions = storageData.getValue(\"questions\");\n    const filteredQuestions = allQuestions.filter((item) => item.id !== id);\n    setTimeout(() => resolve(filteredQuestions), 500);\n    setTimeout(() => reject(new Error(\"User not found\")), 500);\n  });\n};\n\nexport const getAllAnswers = () => {\n  return new Promise((resolve, reject) => {\n    if (\n      !storageData.getValue(\"answers\") ||\n      storageData.getValue(\"answers\") === undefined\n    ) {\n      storageData.setValue(\"answers\", answers);\n      setTimeout(() => resolve(answers), 500);\n    } else {\n      setTimeout(() => resolve(storageData.getValue(\"answers\")), 500);\n    }\n    setTimeout(() => reject(new Error(\"Something went wrong!!!\")), 500);\n  });\n};\n\nexport const getAnswersByUserId = (id) => {\n  return new Promise((resolve, reject) => {\n    let answer = null;\n    if (storageData.getValue(\"answers\")) {\n      answers = storageData.getValue(\"answers\");\n      answer = answers[id];\n    }\n    setTimeout(() => resolve(answer), 500);\n    setTimeout(() => reject(new Error(\"Something went wrong!!!\")), 500);\n  });\n};\n\nexport const createAnswer = (userId, data) => {\n  return new Promise((resolve, reject) => {\n    if (!data.answer)\n      setTimeout(() => reject(new Error(\"Empty answer not allowed!!!\")), 500);\n    const ans = answers[userId];\n    if (ans) {\n      const ques = ans[data.id];\n      if (ques) {\n        ques.answer = data.answer;\n        ques.previousAnswer.push(data.answer);\n        ans[data.id] = ques;\n        answers[userId][data.id] = ques;\n      } else {\n        const newQuestionAnswer = {\n          question: data.question,\n          answer: data.answer,\n          previousAnswer: [data.answer],\n        };\n        answers[userId] = {\n          ...answers[userId],\n          [data.id]: newQuestionAnswer,\n        };\n      }\n    } else {\n      answers = {\n        ...answers,\n        [userId]: {\n          [data.id]: {\n            question: data.question,\n            answer: data.answer,\n            previousAnswer: [data.answer],\n          },\n        },\n      };\n    }\n    setTimeout(() => resolve(answers), 500);\n    setTimeout(() => reject(new Error(\"Something went wrong!!!\")), 500);\n  });\n};\n","import { createContext, useEffect, useState } from \"react\";\nimport { storageData } from \"../utils/storageData\";\nimport { verifyUser } from \"../mock-data/api\";\n\nexport const UserContext = createContext({\n  currentUser: null,\n  authenticateUser: () => {},\n  logout: () => {},\n  loading: false,\n  error: null,\n});\n\nexport function UserProvider({ children }) {\n  const [loading, setLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const user = storageData.getLoggedInUser();\n    if (user) setCurrentUser(user);\n  }, []);\n  async function authenticateUser(email, password) {\n    setLoading(true);\n    await verifyUser(email, password)\n      .then((user) => {\n        storageData.setLoggedInUser(user);\n        setCurrentUser(user);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n\n  function logout() {\n    storageData.logout();\n    setCurrentUser(null);\n  }\n\n  const value = {\n    currentUser,\n    authenticateUser,\n    loading,\n    logout,\n    error,\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n}\n","import { Header } from \"antd/lib/layout/layout\";\nimport LoginOutlined from \"@ant-design/icons/LoginOutlined\";\nimport LogoutOutlined from \"@ant-design/icons/LogoutOutlined\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./style/index.css\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../../contexts/Context\";\nimport { Button } from \"antd\";\nimport { ArrowRightOutlined, QuestionCircleOutlined } from \"@ant-design/icons\";\n\nexport default function Navbar() {\n  const { currentUser, logout } = useContext(UserContext);\n  const history = useHistory();\n  return (\n    <Header className={\"header\"}>\n      <div className=\"logo\">\n        <Link to=\"/\">React Quiz App</Link>\n      </div>\n      <div className={\"header-right-side\"}>\n        {currentUser ? (\n          <>\n            <span>{currentUser.name}, Signed in</span>{\" \"}\n            {currentUser.userType !== \"Admin\" ? (\n              <Button\n                onClick={() => {\n                  history.push(\"/quiz\");\n                }}\n                type={\"primary\"}\n              >\n                Start Quiz <ArrowRightOutlined />\n              </Button>\n            ) : (\n              <>\n                <Button\n                  onClick={() => {\n                    history.push(\"/answers\");\n                  }}\n                  type={\"primary\"}\n                >\n                  Answers\n                </Button>\n                <Button\n                  onClick={() => {\n                    history.push(\"/questions\");\n                  }}\n                  type={\"primary\"}\n                >\n                  <QuestionCircleOutlined /> Questions\n                </Button>\n              </>\n            )}\n            <Button\n              onClick={() => {\n                logout();\n                history.push(\"/signin\");\n              }}\n              type={\"primary\"}\n            >\n              <LogoutOutlined /> Sign Out\n            </Button>\n          </>\n        ) : (\n          <Link to=\"/signin\">\n            <Button type={\"primary\"}>\n              <LoginOutlined /> Sign In\n            </Button>\n          </Link>\n        )}\n      </div>\n    </Header>\n  );\n}\n","import { Layout as AntLayout, notification, Spin } from \"antd\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../contexts/Context\";\nimport Navbar from \"../Navbar\";\nimport \"./style/index.css\";\nconst { Content } = AntLayout;\n\nexport default function Layout({ children }) {\n  const { loading, error, setError } = useContext(UserContext);\n\n  useEffect(() => {\n    if (error) {\n      notification.error({\n        message: error,\n      });\n      setError(null);\n    }\n  }, [error]);\n  return (\n    <Spin spinning={loading}>\n      <AntLayout>\n        <Navbar />\n        <Content>{children}</Content>\n      </AntLayout>\n    </Spin>\n  );\n}\n","import { Redirect, Route } from \"react-router\";\nimport { storageData } from \"../../utils/storageData\";\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        const loggedInUser = storageData.getLoggedInUser();\n        if (loggedInUser) {\n          return <Component {...props} />;\n        } else {\n          return <Redirect to=\"/signin\" />;\n        }\n      }}\n    />\n  );\n}\n","import \"./style/index.css\";\n\nexport default function SubHeader({ title }) {\n  return (\n    <div className={\"title\"}>\n      <h1>{title}</h1>\n    </div>\n  );\n}\n","export default function Answer({ answer }) {\n  return (\n    <div className=\"answer-section\">\n      <div className=\"icon-section\">\n        <span className=\"answer-icon\">A</span>\n      </div>\n      <span>{answer}</span>\n    </div>\n  );\n}\n","export default function Question({ question }) {\n  return (\n    <div className=\"answer-section\">\n      <div className=\"icon-section\">\n        <span className=\"question-icon\">Q</span>\n      </div>\n      <span>{question}</span>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { getAllAnswers } from \"../../../mock-data/api\";\nimport { storageData } from \"../../../utils/storageData\";\n\nexport default function useAnswers() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [answers, setAnswers] = useState(null);\n\n  async function fetchAllAnswers() {\n    setLoading(true);\n    await getAllAnswers()\n      .then((res) => {\n        storageData.setValue(\"answers\", res);\n        setAnswers(res);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n  useEffect(() => {\n    fetchAllAnswers();\n  }, []);\n\n  return {\n    loading,\n    error,\n    answers,\n  };\n}\n","import { MinusOutlined, PlusOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { Collapse, Form, Spin } from \"antd\";\nimport { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport SubHeader from \"../../components/SubHeader\";\nimport { UserContext } from \"../../contexts/Context\";\nimport Answer from \"./components/Answer\";\nimport Question from \"./components/Question\";\nimport useAnswers from \"./hooks/useAnswers\";\nimport \"./style/index.css\";\n\nconst { Panel } = Collapse;\nexport default function AnswersPage() {\n  const { currentUser } = useContext(UserContext);\n  const { answers, loading } = useAnswers();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (currentUser && currentUser?.userType !== \"Admin\") history.push(\"/\");\n  }, [currentUser]);\n\n  return (\n    <Spin spinning={loading}>\n      <SubHeader title={\"Answers\"} />\n      <Form\n        name=\"dynamic_form_nest_item\"\n        autoComplete=\"off\"\n        className={\"container\"}\n      >\n        <Collapse\n          defaultActiveKey={[\"0\"]}\n          expandIcon={() => <UserOutlined />}\n          className={\"user-collapse\"}\n        >\n          {answers &&\n            Object.keys(answers).map((key, index) => (\n              <Panel header={key} key={index}>\n                {Object.keys(answers[key]).map((data, idx) => (\n                  <Collapse\n                    expandIconPosition=\"right\"\n                    expandIcon={({ isActive }) =>\n                      isActive ? <MinusOutlined /> : <PlusOutlined />\n                    }\n                    className={\"question-collapse\"}\n                  >\n                    <Panel\n                      header={\n                        <Question question={answers[key][data].question} />\n                      }\n                      key={idx}\n                    >\n                      <Answer answer={answers[key][data].answer} />\n                    </Panel>\n                  </Collapse>\n                ))}\n              </Panel>\n            ))}\n        </Collapse>\n      </Form>\n    </Spin>\n  );\n}\n","import { Button } from \"antd\";\nimport { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { UserContext } from \"../../contexts/Context\";\n\nimport \"./style/index.css\";\n\nexport default function HomePage() {\n  const history = useHistory();\n  const { currentUser } = useContext(UserContext);\n  useEffect(() => {\n    if (currentUser && currentUser.userType === \"Admin\")\n      history.push(\"/questions\");\n  }, []);\n  return (\n    <div className={\"text-box\"}>\n      <h1 className={\"primary-heading\"}>\n        <span>Welcome to the</span>\n        <span>React Quiz App</span>\n      </h1>\n      <Link to=\"/quiz\">\n        <Button type=\"default\" shape=\"round\" size=\"large\">\n          Start Quiz\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","import { Button } from \"antd\";\nimport { useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport \"./style/index.css\";\n\nexport default function NotFound() {\n  const history = useHistory();\n  useEffect(() => {\n    history.push(\"/\");\n  });\n  return (\n    <div className={\"text-box\"}>\n      <h1 className={\"primary-heading\"}>\n        <span>404</span>\n        <span>Not Found</span>\n      </h1>\n      <Link to=\"/\">\n        <Button type=\"default\" shape=\"round\" size=\"large\">\n          Go Home\n        </Button>\n      </Link>\n    </div>\n  );\n}\n","import { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { Button, Typography } from \"antd\";\n\nconst { Paragraph } = Typography;\nexport default function Question({ onChange, question, handleDelete }) {\n  return (\n    <div className=\"answer-section\">\n      <div className=\"icon-section\">\n        <span className=\"question-icon\">Q</span>\n      </div>\n      <Paragraph\n        editable={{\n          onChange: (e) => onChange(e, question),\n          icon: (\n            <Button type={\"primary\"}>\n              <EditOutlined />\n            </Button>\n          ),\n        }}\n      >\n        {question.question}\n      </Paragraph>\n      <Button type={\"primary\"} onClick={() => handleDelete(question.id)}>\n        <DeleteOutlined />\n      </Button>\n    </div>\n  );\n}\n","import { Form, Input, Button } from \"antd\";\n\nexport default function AddQuestion({ form, handleAddQuestion }) {\n  return (\n    <Form\n      layout={\"inline\"}\n      className={\"add-question-form\"}\n      onFinish={handleAddQuestion}\n      form={form}\n    >\n      <Form.Item name=\"question\" style={{ width: \"80%\" }}>\n        <Input.TextArea placeholder=\"Add Question\" />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Add Question\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  createQuestion,\n  deleteQuestions,\n  getAllQuestions,\n  updateQuestions,\n} from \"../../../mock-data/api\";\nimport { storageData } from \"../../../utils/storageData\";\n\nexport default function useQuestions() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [questions, setQuestions] = useState([]);\n\n  async function fetchAllQuestions() {\n    setLoading(true);\n    await getAllQuestions()\n      .then((res) => {\n        storageData.setValue(\"questions\", res);\n        setQuestions(res);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n\n  async function addQuestion(data) {\n    setLoading(true);\n    await createQuestion(data)\n      .then((res) => {\n        storageData.setValue(\"questions\", res);\n        setQuestions(res);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n\n  async function removeQuestion(id) {\n    setLoading(true);\n    await deleteQuestions(id)\n      .then((res) => {\n        storageData.setValue(\"questions\", res);\n        setQuestions(res);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n\n  async function editQuestions(id, question) {\n    setLoading(true);\n    await updateQuestions(id, question)\n      .then((res) => {\n        storageData.setValue(\"questions\", res);\n        setQuestions(res);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n\n  useEffect(() => {\n    fetchAllQuestions();\n  }, []);\n\n  return {\n    loading,\n    error,\n    questions,\n    addQuestion,\n    removeQuestion,\n    editQuestions,\n  };\n}\n","import { Form, Spin } from \"antd\";\nimport { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport SubHeader from \"../../components/SubHeader\";\nimport { UserContext } from \"../../contexts/Context\";\nimport \"./style/index.css\";\nimport Question from \"./components/Question\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport useQuestions from \"./hooks/useQuestions\";\n\nexport const QuestionsPage = () => {\n  const [form] = Form.useForm();\n  const history = useHistory();\n  const { currentUser } = useContext(UserContext);\n  const { questions, loading, addQuestion, removeQuestion, editQuestions } =\n    useQuestions();\n  const onChange = (val, question) => {\n    if (question.id && val.length > 0 && val !== question.question) {\n      editQuestions(question.id, val);\n    }\n  };\n\n  const handleDelete = (id) => {\n    removeQuestion(id);\n  };\n  const handleAddQuestion = (data) => {\n    addQuestion(data);\n    form.resetFields();\n  };\n  useEffect(() => {\n    if (currentUser?.userType !== \"Admin\") history.push(\"/\");\n  }, []);\n  return (\n    <Spin spinning={loading}>\n      <SubHeader title={\"Questions\"} />\n      <Form\n        name=\"dynamic_form_nest_item\"\n        autoComplete=\"off\"\n        className={\"container\"}\n      >\n        {questions.map((question, index) => (\n          <Form.Item key={question.id}>\n            <Question\n              index={index}\n              onChange={onChange}\n              question={question}\n              handleDelete={handleDelete}\n            />\n          </Form.Item>\n        ))}\n      </Form>\n      <AddQuestion form={form} handleAddQuestion={handleAddQuestion} />\n    </Spin>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  createAnswer,\n  getAllQuestions,\n  getAnswersByUserId,\n} from \"../../../mock-data/api\";\nimport { storageData } from \"../../../utils/storageData\";\n\nexport default function useQuiz(userId) {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [answers, setAnswers] = useState(null);\n  const [questions, setQuestions] = useState([]);\n\n  async function fetchAnswers() {\n    setLoading(true);\n    await getAnswersByUserId(userId)\n      .then((res) => {\n        setAnswers(res);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n  async function fetchAllQuestions() {\n    setLoading(true);\n    await getAllQuestions()\n      .then((res) => {\n        storageData.setValue(\"questions\", res);\n        setQuestions(res);\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n  useEffect(() => {\n    fetchAnswers();\n    fetchAllQuestions();\n  }, [userId]);\n\n  async function submitAnswer(userId, data) {\n    setLoading(true);\n    await createAnswer(userId, data)\n      .then((res) => {\n        storageData.setValue(\"answers\", res);\n        // setAnswers(res);\n        fetchAnswers();\n        setLoading(false);\n      })\n      .catch((error) => {\n        setLoading(false);\n        setError(error.toString());\n      });\n  }\n\n  return {\n    loading,\n    error,\n    answers,\n    submitAnswer,\n    questions,\n  };\n}\n","import { EditOutlined } from \"@ant-design/icons\";\nimport { Button, Form, Input, Typography } from \"antd\";\n\nconst { Paragraph } = Typography;\n\nexport default function AnswerSection({\n  answers,\n  question,\n  handleSubmitAnswer,\n  form,\n}) {\n  return (\n    <div className=\"answer-section\">\n      <div className=\"icon-section\">\n        <span className=\"answer-icon\">A</span>\n      </div>\n      {answers && answers[question?.id] ? (\n        <div className=\"text-section\">\n          <Paragraph\n            editable={{\n              onChange: (val) => handleSubmitAnswer(question, val),\n              icon: (\n                <Button type={\"primary\"}>\n                  <EditOutlined />\n                </Button>\n              ),\n            }}\n          >\n            {answers[question?.id]?.answer}\n          </Paragraph>\n        </div>\n      ) : (\n        <Form key={question.id} layout={\"inline\"} form={form}>\n          <Form.Item name={`answer-${question.id}`}>\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" onClick={() => handleSubmitAnswer(question)}>\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      )}\n    </div>\n  );\n}\n","import { List } from \"antd\";\n\nexport default function PreviousAnswer({ prevAns }) {\n  return (\n    <List\n      header={<div>Previous Answer</div>}\n      bordered\n      dataSource={prevAns}\n      renderItem={(item) => <List.Item>{item}</List.Item>}\n      style={{ marginTop: \"15px\" }}\n    />\n  );\n}\n","import { MinusOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Collapse, Form, notification, Spin } from \"antd\";\nimport { useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport SubHeader from \"../../components/SubHeader\";\nimport { UserContext } from \"../../contexts/Context\";\nimport useQuiz from \"./hooks/useQuiz\";\nimport AnswerSection from \"./components/AnswerSection\";\nimport PreviousAnswer from \"./components/PreviousAnswer\";\nimport \"./style/index.css\";\n\nconst { Panel } = Collapse;\n\nexport default function QuizPage() {\n  const history = useHistory();\n  const { currentUser } = useContext(UserContext);\n  const { loading, error, answers, submitAnswer, questions } = useQuiz(\n    currentUser?.email\n  );\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (currentUser?.userType === \"Admin\") history.push(\"/questions\");\n  }, [currentUser]);\n\n  useEffect(() => {\n    if (error) {\n      notification.error({\n        message: error,\n      });\n    }\n  }, [error]);\n\n  const handleSubmitAnswer = (data, editAnswer = null) => {\n    let ans = editAnswer;\n    if (!editAnswer) ans = form.getFieldValue(`answer-${data.id}`);\n    const submitData = {\n      ...data,\n      answer: ans,\n    };\n    submitAnswer(currentUser?.email, submitData);\n  };\n  return (\n    <Spin spinning={loading}>\n      <SubHeader title={\"Quiz\"} />\n      <div className={\"container\"}>\n        <Collapse\n          accordion\n          expandIconPosition=\"right\"\n          expandIcon={({ isActive }) =>\n            isActive ? <MinusOutlined /> : <PlusOutlined />\n          }\n        >\n          {questions &&\n            questions.map((question, index) => {\n              return (\n                <Panel\n                  header={\n                    <div className=\"answer-section\">\n                      <div className=\"icon-section\">\n                        <span className=\"question-icon\">Q</span>\n                      </div>\n                      {question.question}\n                    </div>\n                  }\n                  key={question.id}\n                >\n                  <AnswerSection\n                    answers={answers}\n                    question={question}\n                    handleSubmitAnswer={handleSubmitAnswer}\n                    form={form}\n                  />\n                  {answers &&\n                  answers[question?.id]?.previousAnswer.length > 1 ? (\n                    <PreviousAnswer\n                      prevAns={answers[question?.id]?.previousAnswer.slice(\n                        0,\n                        -1\n                      )}\n                    />\n                  ) : null}\n                </Panel>\n              );\n            })}\n        </Collapse>\n      </div>\n    </Spin>\n  );\n}\n","import { Form, Input, Button } from \"antd\";\nimport { UserOutlined, LockOutlined, LoginOutlined } from \"@ant-design/icons\";\n\nimport \"./style/index.css\";\nimport { useContext, useEffect } from \"react\";\nimport { UserContext } from \"../../contexts/Context\";\nimport { useHistory } from \"react-router\";\n\nexport default function SingInForm() {\n  const { authenticateUser, currentUser } = useContext(UserContext);\n  const history = useHistory();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (currentUser) history.push(\"/\");\n  }, [currentUser]);\n\n  const authenticate = (values) => {\n    authenticateUser(values.email, values.password);\n    form.resetFields();\n  };\n\n  return (\n    <Form\n      name=\"normal_signin\"\n      className=\"signin-form\"\n      initialValues={{\n        remember: true,\n      }}\n      onFinish={authenticate}\n      form={form}\n    >\n      <Form.Item className={\"form-title\"}>\n        <h1>Sign in to Continue</h1>\n      </Form.Item>\n      <Form.Item\n        name=\"email\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Email!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\n          placeholder=\"Email\"\n          autoComplete={\"new-password\"}\n          type=\"email\"\n        />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: \"Please input your Password!\",\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n          autoComplete={\"new-password\"}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"signin-form-button\">\n          <LoginOutlined /> Sign in\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { UserProvider } from \"./contexts/Context\";\nimport AnswersPage from \"./pages/AnswersPage\";\nimport HomePage from \"./pages/HomePage\";\nimport NotFound from \"./pages/NotFound\";\nimport { QuestionsPage } from \"./pages/QuestionsPage\";\nimport QuizPage from \"./pages/QuizPage\";\nimport Signin from \"./pages/Signin\";\n\nfunction App() {\n  return (\n    <Router>\n      <UserProvider>\n        <Layout>\n          <Switch>\n            <Route exact path={\"/signin\"} component={Signin} />\n            <PrivateRoute exact path={\"/\"} component={HomePage} />\n            <PrivateRoute exact path={\"/questions\"} component={QuestionsPage} />\n            <PrivateRoute exact path={\"/answers\"} component={AnswersPage} />\n            <PrivateRoute exact path={\"/quiz\"} component={QuizPage} />\n            <Route component={NotFound} />\n          </Switch>\n        </Layout>\n      </UserProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './global.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}